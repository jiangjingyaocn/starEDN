# import matplotlib.pyplot as plt
# import pandas as pd
#
# # 定义数据
# data = {
#     'Epoch': list(range(1, 51)),  # 从1开始的50个Epoch
#     'Val_Loss': [
#         3.2617, 2.4652, 2.1919, 2.1184, 2.0490, 2.0662, 1.9978, 1.9325, 1.9465, 1.9387,
#         2.0623, 1.9499, 1.8996, 1.9235, 1.9586, 1.8453, 1.8805, 1.9055, 1.9907, 2.0146,
#         1.9445, 1.9313, 1.9759, 1.9861, 1.9787, 2.0174, 2.0464, 1.9886, 2.0265, 1.9992,
#         # 2.0230, 2.0354, 2.1322, 2.0412, 2.0833, 2.0819, 2.0475, 2.0367, 2.1277, 2.1067,
#         # 2.0725, 2.0891, 2.0717, 2.0902, 2.1233, 2.1471, 2.2237, 2.1774, 2.1604, 2.1504
#     ],
#     'F_beta_val': [
#         0.6867, 0.7606, 0.7863, 0.7912, 0.7967, 0.7983, 0.8067, 0.8124, 0.8141, 0.8199,
#         0.8149, 0.8228, 0.8290, 0.8276, 0.8257, 0.8337, 0.8368, 0.8329, 0.8322, 0.8312,
#         0.8363, 0.8403, 0.8410, 0.8387, 0.8418, 0.8367, 0.8363, 0.8404, 0.8465, 0.8413,
#         0.8435, 0.8458, 0.8423, 0.8448, 0.8426, 0.8443, 0.8435, 0.8450, 0.8455, 0.8449,
#         0.8470, 0.8494, 0.8484, 0.8495, 0.8491, 0.8464, 0.8449, 0.8463, 0.8477, 0.8486
#     ],
#     'Loss': [
#         2.74391, 1.43631, 1.36672, 0.96968, 0.85696, 0.68230, 1.10393, 0.72639, 0.96827, 0.59454,
#         0.90240, 0.72853, 0.62343, 0.51374, 0.62688, 0.50614, 0.55980, 0.50454, 0.58790, 0.67876,
#         0.49628, 0.62747, 0.53458, 0.58254, 0.53287, 0.50353, 0.41809, 0.47726, 0.51054, 0.50131,
#         0.45308, 0.46976, 0.48907, 0.41168, 0.62100, 0.44030, 0.47172, 0.42080, 0.49176, 0.37820,
#         0.38615, 0.38417, 0.41601, 0.44014, 0.44977, 0.44913, 0.39796, 0.42719, 0.40265, 0.45832
#     ],
#     'MAE_val': [
#         0.1192, 0.0840, 0.0683, 0.0699, 0.0628, 0.0633, 0.0596, 0.0553, 0.0554, 0.0542,
#         0.0597, 0.0541, 0.0520, 0.0518, 0.0530, 0.0505, 0.0497, 0.0517, 0.0515, 0.0525,
#         0.0497, 0.0495, 0.0509, 0.0493, 0.0492, 0.0496, 0.0502, 0.0500, 0.0507, 0.0490,
#         0.0493, 0.0491, 0.0490, 0.0481, 0.0483, 0.0497, 0.0480, 0.0480, 0.0476, 0.0487,
#         0.0484, 0.0466, 0.0471, 0.0473, 0.0471, 0.0484, 0.0490, 0.0480, 0.0481, 0.0474
#     ]
# }
#
# # 创建 DataFrame
# df = pd.DataFrame(data)
#
# # 画出四个曲线
# plt.figure(figsize=(12, 6))
#
# plt.plot(df['Epoch'], df['Val_Loss'], label='Validation Loss', color='red', marker='o')
# plt.plot(df['Epoch'], df['F_beta_val'], label='F-beta (val)', color='blue', marker='s')
# plt.plot(df['Epoch'], df['Loss'], label='Training Loss', color='green', marker='^')
# plt.plot(df['Epoch'], df['MAE_val'], label='MAE (val)', color='purple', marker='x')
#
# # 添加标题、标签和图例
# plt.xlabel('Epoch')
# plt.ylabel('Value')
# # plt.title('Training and Validation Metrics Over Epochs')
# plt.legend()
# plt.grid(True)
#
# # 保存图片到指定目录
# save_path = '/Users/jjy/Desktop/Method/EDNNew/results/training_plot.png'  # 替换为你想保存的目录路径
# plt.savefig(save_path)
#
# # 显示图像
# plt.show()
import matplotlib.pyplot as plt
import pandas as pd

# 定义数据（仅前30轮）
data = {
    'Epoch': list(range(1, 31)),  # 1到30
    'Val_Loss': [
        3.2617, 2.4652, 2.1919, 2.1184, 2.0490, 2.0662, 1.9978, 1.9325, 1.9465, 1.9387,
        2.0623, 1.9499, 1.8996, 1.9235, 1.9586, 1.8453, 1.8805, 1.9055, 1.9907, 2.0146,
        1.9445, 1.9313, 1.9759, 1.9861, 1.9787, 2.0174, 2.0464, 1.9886, 2.0265, 1.9992
    ],
    'F_beta_val': [
        0.6867, 0.7606, 0.7863, 0.7912, 0.7967, 0.7983, 0.8067, 0.8124, 0.8141, 0.8199,
        0.8149, 0.8228, 0.8290, 0.8276, 0.8257, 0.8337, 0.8368, 0.8329, 0.8322, 0.8312,
        0.8363, 0.8403, 0.8410, 0.8387, 0.8418, 0.8367, 0.8363, 0.8404, 0.8465, 0.8413
    ],
    'Loss': [
        2.74391, 1.43631, 1.36672, 0.96968, 0.85696, 0.68230, 1.10393, 0.72639, 0.96827, 0.59454,
        0.90240, 0.72853, 0.62343, 0.51374, 0.62688, 0.50614, 0.55980, 0.50454, 0.58790, 0.67876,
        0.49628, 0.62747, 0.53458, 0.58254, 0.53287, 0.50353, 0.41809, 0.47726, 0.51054, 0.50131
    ],
    'MAE_val': [
        0.1192, 0.0840, 0.0683, 0.0699, 0.0628, 0.0633, 0.0596, 0.0553, 0.0554, 0.0542,
        0.0597, 0.0541, 0.0520, 0.0518, 0.0530, 0.0505, 0.0497, 0.0517, 0.0515, 0.0525,
        0.0497, 0.0495, 0.0509, 0.0493, 0.0492, 0.0496, 0.0502, 0.0500, 0.0507, 0.0490
    ]
}

# 创建 DataFrame
df = pd.DataFrame(data)

# 创建画布
fig, ax1 = plt.subplots(figsize=(12, 6))

# 画 Val_Loss 和 Loss (使用左轴)
ax1.plot(df['Epoch'], df['Val_Loss'], label='Validation Loss', color='red', marker='o')
ax1.plot(df['Epoch'], df['Loss'], label='Training Loss', color='green', marker='^')

ax1.set_xlabel('Epoch')
ax1.set_ylabel('Loss Values')  # 左轴标签
ax1.tick_params(axis='y', labelcolor='red')  # 左轴颜色
ax1.legend(loc='upper left')
ax1.grid(True)

# 创建右轴
ax2 = ax1.twinx()

# 画 F_beta_val 和 MAE_val (使用右轴)
ax2.plot(df['Epoch'], df['F_beta_val'], label='F-beta (val)', color='blue', marker='s', linestyle='dashed')
ax2.plot(df['Epoch'], df['MAE_val'], label='MAE (val)', color='purple', marker='x', linestyle='dashed')

ax2.set_ylabel('F-beta & MAE Values')  # 右轴标签
ax2.tick_params(axis='y', labelcolor='blue')  # 右轴颜色
ax2.legend(loc='upper right')

# 保存图片
save_path = '/Users/jjy/Desktop/Method/EDNNew/results/training_plot.png'
plt.savefig(save_path)

# 显示图像
plt.show()
